{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","className","cn","disabled","href","onClick","Math","ceil","map","active","Item","number","App","start","end","useState","setPerPage","setCurrentPage","currentItemNum","lastItemNum","id","onChange","event","parseInt","target","value","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"mLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEA,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBL,EACfM,QAAS,kBAAML,EAAaD,EAAc,IAL5C,oBAWDT,EAAW,EAAGgB,KAAKC,KAAKV,EAAQC,IAC9BU,KAAI,SAACd,GAAD,OACH,oBAEEO,UAAWC,IACT,YACA,CAAEO,OAAQf,IAAMK,IAJpB,SAOE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAI,WAAMV,GACVW,QAAS,kBAAML,EAAaN,IAJ9B,SAMGA,KAZEA,MAiBX,oBAAIO,UAAWC,IACb,YACA,CAAEC,SAAUJ,IAAgBO,KAAKC,KAAKV,EAAQC,KAFhD,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeL,IAAgBO,KAAKC,KAAKV,EAAQC,GACjDO,QAAS,kBAAML,EAAaD,EAAc,IAL5C,wBCvDFW,G,MAAqC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,oBAAI,UAAQ,OAAZ,wBAA4BA,OAQjBC,EAAgB,WAC3B,IANsBC,EAAeC,EAOrC,EAA8BC,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBkB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBkB,EAApB,KAEMC,EAAiBnB,EAAcD,EAAUA,EAAU,EACnDqB,EAAcpB,EAAcD,EALpB,MAOVC,EAAcD,EAElB,OACE,sBAAKG,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWF,EADX,mBACiCmB,EADjC,cACqDC,EADrD,eAbU,GAaV,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,SAAU,SAACC,GACTN,EAAWO,SAASD,EAAME,OAAOC,MAAO,KACxCR,EAAe,IAEjBQ,MAAO3B,EART,UAUE,wBAAQ2B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEJ,MA1CQ,GA2CRC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAAC2B,GAEX5B,IAAgB4B,GACbA,EAAO,GACPA,GAAQrB,KAAKC,KAjDZ,GAiDyBT,IAE7BmB,EAAeU,MAKrB,8BA9DkBd,EA+DAK,EA/DeJ,EA+DCK,EA9D/B7B,EAAWuB,EAAOC,GACtBN,KAAI,SAAAd,GAAC,OAAI,cAAC,EAAD,CAAciB,OAAQjB,GAAXA,aCRzBkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.21460c74.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {getNumbers(1, Math.ceil(total / perPage))\n        .map((n: number) => (\n          <li\n            key={n}\n            className={cn(\n              'page-item',\n              { active: n === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${n}`}\n              onClick={() => onPageChange(n)}\n            >\n              {n}\n            </a>\n          </li>\n        ))}\n\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === Math.ceil(total / perPage) },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === Math.ceil(total / perPage)}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\n\nconst Item: React.FC<{ number: number }> = ({ number }) => (\n  <li data-cy=\"item\">{`Item ${number}`}</li>\n);\n\nconst itemsGenerator = (start: number, end: number): JSX.Element[] => {\n  return getNumbers(start, end)\n    .map(n => <Item key={n} number={n} />);\n};\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const currentItemNum = currentPage * perPage - perPage + 1;\n  const lastItemNum = currentPage * perPage > total\n    ? total\n    : currentPage * perPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${currentItemNum} - ${lastItemNum} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n              setPerPage(parseInt(event.target.value, 10));\n              setCurrentPage(1);\n            }}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page: number) => {\n          if (\n            currentPage !== page\n            && page > 0\n            && page <= Math.ceil(total / perPage)\n          ) {\n            setCurrentPage(page);\n          }\n        }}\n      />\n\n      <ul>\n        {itemsGenerator(currentItemNum, lastItemNum)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}